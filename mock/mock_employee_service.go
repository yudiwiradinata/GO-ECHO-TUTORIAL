// Code generated by MockGen. DO NOT EDIT.
// Source: GO-ECHO-TUTORIAL/service (interfaces: EmployeeServiceInterface)

// Package mock is a generated GoMock package.
package mock

import (
	model "GO-ECHO-TUTORIAL/model"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockEmployeeServiceInterface is a mock of EmployeeServiceInterface interface
type MockEmployeeServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockEmployeeServiceInterfaceMockRecorder
}

// MockEmployeeServiceInterfaceMockRecorder is the mock recorder for MockEmployeeServiceInterface
type MockEmployeeServiceInterfaceMockRecorder struct {
	mock *MockEmployeeServiceInterface
}

// NewMockEmployeeServiceInterface creates a new mock instance
func NewMockEmployeeServiceInterface(ctrl *gomock.Controller) *MockEmployeeServiceInterface {
	mock := &MockEmployeeServiceInterface{ctrl: ctrl}
	mock.recorder = &MockEmployeeServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockEmployeeServiceInterface) EXPECT() *MockEmployeeServiceInterfaceMockRecorder {
	return m.recorder
}

// CreateEmp mocks base method
func (m *MockEmployeeServiceInterface) CreateEmp(arg0 model.EmployeeRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateEmp", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateEmp indicates an expected call of CreateEmp
func (mr *MockEmployeeServiceInterfaceMockRecorder) CreateEmp(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateEmp", reflect.TypeOf((*MockEmployeeServiceInterface)(nil).CreateEmp), arg0)
}

// DeleteEmp mocks base method
func (m *MockEmployeeServiceInterface) DeleteEmp(arg0 string) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteEmp", arg0)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteEmp indicates an expected call of DeleteEmp
func (mr *MockEmployeeServiceInterfaceMockRecorder) DeleteEmp(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteEmp", reflect.TypeOf((*MockEmployeeServiceInterface)(nil).DeleteEmp), arg0)
}

// GetEmp mocks base method
func (m *MockEmployeeServiceInterface) GetEmp() (*model.Employees, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEmp")
	ret0, _ := ret[0].(*model.Employees)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEmp indicates an expected call of GetEmp
func (mr *MockEmployeeServiceInterfaceMockRecorder) GetEmp() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEmp", reflect.TypeOf((*MockEmployeeServiceInterface)(nil).GetEmp))
}

// GetEmployeeByName mocks base method
func (m *MockEmployeeServiceInterface) GetEmployeeByName(arg0 string) (*model.Employees, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEmployeeByName", arg0)
	ret0, _ := ret[0].(*model.Employees)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEmployeeByName indicates an expected call of GetEmployeeByName
func (mr *MockEmployeeServiceInterfaceMockRecorder) GetEmployeeByName(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEmployeeByName", reflect.TypeOf((*MockEmployeeServiceInterface)(nil).GetEmployeeByName), arg0)
}

// UpdateEmp mocks base method
func (m *MockEmployeeServiceInterface) UpdateEmp(arg0 string, arg1 model.EmployeeRequest) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateEmp", arg0, arg1)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateEmp indicates an expected call of UpdateEmp
func (mr *MockEmployeeServiceInterfaceMockRecorder) UpdateEmp(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateEmp", reflect.TypeOf((*MockEmployeeServiceInterface)(nil).UpdateEmp), arg0, arg1)
}
